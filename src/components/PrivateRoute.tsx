
import { Navigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { RootState } from "../redux/store";

interface PrivateRouteProps {
  // component: () => JSX.Element;
  component: JSX.Element | (() => JSX.Element); // ‚úÖ –î–æ–¥–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –≤ —Ç–∏–ø—ñ–∑–∞—Ü—ñ—é
  redirectTo: string;
}

export default function PrivateRoute({ component, redirectTo }: PrivateRouteProps): JSX.Element {
  
  const isLoggedIn = useSelector((state: RootState) => state.auth.isLoggedIn);
  const isRefreshing = useSelector((state: RootState) => state.auth.isRefreshing);
   console.log("üîí PrivateRoute check:", { isLoggedIn, isRefreshing });
  // ‚è≥ –ü–æ–∫–∏ –π–¥–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É, –Ω–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º–æ
  if (isRefreshing) {
    return <p>Loading...</p>; // –ê–±–æ —Å–ø—ñ–Ω–µ—Ä
  }
// –Ø–∫—â–æ —é–∑–µ—Ä –Ω–µ –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π —ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —á–∏ –ª–æ–≥—ñ–Ω—É ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
  if (!isLoggedIn && (location.pathname === "/register" || location.pathname === "/login")) {
    return typeof component === "function" ? component() : component;
  }
  if (!isLoggedIn) {
    // console.log("‚ùå User not logged in! Redirecting to", redirectTo);
    return <Navigate to={redirectTo} />;
  }

  // console.log("‚úÖ User logged in! Rendering component.");
  return typeof component === "function" ? component() : component; // ‚úÖ –í–∏–∫–æ–Ω—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫—â–æ —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—è
};


// –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π, –ø–æ–∫–∞–∑—É—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (component). –Ø–∫—â–æ –Ω—ñ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î (redirectTo) to = element={<Navigate to="/login" />} />



// export default PrivateRoute;

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é PrivateRoute: –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫, –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ª–∏—à–µ –ø—ñ—Å–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, /catalog —á–∏ –ø–æ–¥—É–º–∞—é (—è–∫—ñ—Å—å –≤–ª–∞—Å–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó, –ø–æ–¥—ñ—ó, –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —ñ —ñ–Ω—à–µ)),
